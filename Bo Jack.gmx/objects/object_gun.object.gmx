<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_enemyGun</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*-------------------------------------
        Initialize Variables
--------------------------------------*/

/*------------------
        Reload      
------------------*/
countdown = 80;
countdownRate = countdown;

/*------------------
        States                  
------------------*/
state = gunState.normal;
enum gunState
{
    normal,
    shoot,
    dontShoot
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*--------------------------
        Image Control                     
--------------------------*/
if (instance_exists(object_gunner))
{
    if (owner.image_xscale &lt;= 0)
    {
        x = owner.x - 9;
        y = owner.y + 7;
    }

    if (owner.image_xscale &gt;= 0)
    {
        x = owner.x + 9;
        y = owner.y + 7;
    }
    image_xscale = abs(owner.image_xscale);
    image_yscale = abs(owner.image_yscale);
    image_angle = 180;

    /*----------------------------
            Gun's State      
    ----------------------------*/
    if (instance_exists(object_player))
    {
        if (object_player.x &lt; x)
        {
            image_yscale = -image_yscale;
        }
        switch (state)
        {

            case gunState.normal:
            {
                countdown = countdownRate;
            }
            break;

        case gunState.dontShoot:
        {
            countdown = countdownRate;
        }
        break;

        case gunState.shoot:
        {
            if (!collision_line(x, y, object_player.x, object_player.y, object_wall || object_platform, false, false))
            {
                image_angle = point_direction(x, y, object_player.x, object_player.y);
                countdown--;

                if (countdown &lt;= 0)
                {
                    countdown = countdownRate;
                    if (!collision_line(x, y, object_player.x, object_player.y, object_wall || object_platform, false, false))
                    {
                        with(instance_create(x - 7, y, object_enemyGunBullet))
                        {
                            spd = 5;
                            direction = other.image_angle + random_range(-3, 3);
                            image_angle = direction;
                        }
                    }
                }
            }
        }
        break;
        }
    }
    
    else if (object_playerDead.x &lt; x)
    {
        image_yscale = -image_yscale;
    }

}
else
{
    instance_destroy()
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
